// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: proto/service.proto

package service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocId         string                 `protobuf:"bytes,1,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatRequest) Reset() {
	*x = ChatRequest{}
	mi := &file_proto_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRequest) ProtoMessage() {}

func (x *ChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRequest.ProtoReflect.Descriptor instead.
func (*ChatRequest) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{0}
}

func (x *ChatRequest) GetDocId() string {
	if x != nil {
		return x.DocId
	}
	return ""
}

type ChatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatID        string                 `protobuf:"bytes,1,opt,name=ChatID,proto3" json:"ChatID,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	IsError       bool                   `protobuf:"varint,3,opt,name=IsError,proto3" json:"IsError,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatResponse) Reset() {
	*x = ChatResponse{}
	mi := &file_proto_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatResponse) ProtoMessage() {}

func (x *ChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatResponse.ProtoReflect.Descriptor instead.
func (*ChatResponse) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{1}
}

func (x *ChatResponse) GetChatID() string {
	if x != nil {
		return x.ChatID
	}
	return ""
}

func (x *ChatResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChatResponse) GetIsError() bool {
	if x != nil {
		return x.IsError
	}
	return false
}

type CreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocId         string                 `protobuf:"bytes,1,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DocText       string                 `protobuf:"bytes,3,opt,name=doc_text,json=docText,proto3" json:"doc_text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	mi := &file_proto_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateRequest) GetDocId() string {
	if x != nil {
		return x.DocId
	}
	return ""
}

func (x *CreateRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateRequest) GetDocText() string {
	if x != nil {
		return x.DocText
	}
	return ""
}

type CreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChatID        string                 `protobuf:"bytes,1,opt,name=ChatID,proto3" json:"ChatID,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	IsError       bool                   `protobuf:"varint,3,opt,name=IsError,proto3" json:"IsError,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	mi := &file_proto_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_proto_service_proto_rawDescGZIP(), []int{3}
}

func (x *CreateResponse) GetChatID() string {
	if x != nil {
		return x.ChatID
	}
	return ""
}

func (x *CreateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateResponse) GetIsError() bool {
	if x != nil {
		return x.IsError
	}
	return false
}

var File_proto_service_proto protoreflect.FileDescriptor

const file_proto_service_proto_rawDesc = "" +
	"\n" +
	"\x13proto/service.proto\x12\aservice\"$\n" +
	"\vChatRequest\x12\x15\n" +
	"\x06doc_id\x18\x01 \x01(\tR\x05docId\"Z\n" +
	"\fChatResponse\x12\x16\n" +
	"\x06ChatID\x18\x01 \x01(\tR\x06ChatID\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12\x18\n" +
	"\aIsError\x18\x03 \x01(\bR\aIsError\"Z\n" +
	"\rCreateRequest\x12\x15\n" +
	"\x06doc_id\x18\x01 \x01(\tR\x05docId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x19\n" +
	"\bdoc_text\x18\x03 \x01(\tR\adocText\"\\\n" +
	"\x0eCreateResponse\x12\x16\n" +
	"\x06ChatID\x18\x01 \x01(\tR\x06ChatID\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\x12\x18\n" +
	"\aIsError\x18\x03 \x01(\bR\aIsError2\x81\x01\n" +
	"\aService\x127\n" +
	"\bGetChats\x12\x14.service.ChatRequest\x1a\x15.service.ChatResponse\x12=\n" +
	"\n" +
	"CreateChat\x12\x16.service.CreateRequest\x1a\x17.service.CreateResponseB!Z\x1fapiserver/proto/service;serviceb\x06proto3"

var (
	file_proto_service_proto_rawDescOnce sync.Once
	file_proto_service_proto_rawDescData []byte
)

func file_proto_service_proto_rawDescGZIP() []byte {
	file_proto_service_proto_rawDescOnce.Do(func() {
		file_proto_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_service_proto_rawDesc), len(file_proto_service_proto_rawDesc)))
	})
	return file_proto_service_proto_rawDescData
}

var file_proto_service_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_service_proto_goTypes = []any{
	(*ChatRequest)(nil),    // 0: service.ChatRequest
	(*ChatResponse)(nil),   // 1: service.ChatResponse
	(*CreateRequest)(nil),  // 2: service.CreateRequest
	(*CreateResponse)(nil), // 3: service.CreateResponse
}
var file_proto_service_proto_depIdxs = []int32{
	0, // 0: service.Service.GetChats:input_type -> service.ChatRequest
	2, // 1: service.Service.CreateChat:input_type -> service.CreateRequest
	1, // 2: service.Service.GetChats:output_type -> service.ChatResponse
	3, // 3: service.Service.CreateChat:output_type -> service.CreateResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_service_proto_init() }
func file_proto_service_proto_init() {
	if File_proto_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_service_proto_rawDesc), len(file_proto_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_service_proto_goTypes,
		DependencyIndexes: file_proto_service_proto_depIdxs,
		MessageInfos:      file_proto_service_proto_msgTypes,
	}.Build()
	File_proto_service_proto = out.File
	file_proto_service_proto_goTypes = nil
	file_proto_service_proto_depIdxs = nil
}
