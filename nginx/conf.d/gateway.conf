server {
    listen 80;
    server_name localhost;

    # Access and error logs
    access_log /var/log/nginx/gateway_access.log main;
    error_log /var/log/nginx/gateway_error.log;

    # Health check endpoint
    location = /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Root endpoint
    location = / {
        return 200 '{"message":"PDF Chatter API Gateway","status":"healthy"}';
        add_header Content-Type application/json;
    }

    # Go API routes - proxy to host.docker.internal:8080
    location /api/ {
        # Remove /api prefix when forwarding to Go service
        rewrite ^/api/(.*)$ /$1 break;
        
        # Proxy settings
        proxy_pass http://host.docker.internal:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Python AI routes - proxy to host.docker.internal:8000
    location /ai/ {
        # Remove /ai prefix when forwarding to Python service
        rewrite ^/ai/(.*)$ /$1 break;
        
        # Proxy settings
        proxy_pass http://host.docker.internal:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts (longer for AI processing)
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # Error pages
    error_page 404 /404.json;
    location = /404.json {
        return 404 '{"error":"Endpoint not found"}';
        add_header Content-Type application/json;
    }

    error_page 500 502 503 504 /50x.json;
    location = /50x.json {
        return 500 '{"error":"Internal server error"}';
        add_header Content-Type application/json;
    }
}